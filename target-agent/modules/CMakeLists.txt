cmake_minimum_required(VERSION 3.0)

PROJECT (solys-agent)



SET (PLUGIN_INTERFACE_INCLUDE_DIR	${CMAKE_CURRENT_SOURCE_DIR}/plugin-interface/inc
									${CMAKE_CURRENT_SOURCE_DIR}/plugin-interface/gen)
SET (CONFIG_PROVIDER_INCLUDE_DIR  	${CMAKE_CURRENT_SOURCE_DIR}/config-provider/inc)
SET (PLUGIN_PROVIDER_INCLUDE_DIR	${CMAKE_CURRENT_SOURCE_DIR}/plugin-provider/inc)
SET (COMMUNICATOR_INCLUDE_DIR		${CMAKE_CURRENT_SOURCE_DIR}/communicator/inc
									${CMAKE_CURRENT_SOURCE_DIR}/communicator/gen)
SET (MESSAGE_RECORDER_INCLUDE_DIR	${CMAKE_CURRENT_SOURCE_DIR}/message-recorder/inc)
SET (MEDIATOR_INCLUDE_DIR	        ${CMAKE_CURRENT_SOURCE_DIR}/target-agent-runtime/inc)
SET (LOGGER_INCLUDE_DIR         	${CMAKE_CURRENT_SOURCE_DIR}/logger/inc)

include(FindProtobuf)
find_package(Protobuf REQUIRED)
find_package(Poco REQUIRED Foundation Util Net XML JSON)


IF(NOT MSVC AND NOT ANDROID AND NOT ${CMAKE_SYSTEM_NAME} MATCHES "QNX")
    SET(ADDITIONAL_LIBRARY -lrt)
	SET(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,${ORIGIN}" )
ENDIF()

IF(NOT ${CMAKE_SYSTEM_NAME} MATCHES "QNX")
	SET( CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS}  -fPIE -pthread" )
	SET( CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS}  -fPIE -pie" )		
	SET( CMAKE_C_FLAGS  "${CMAKE_CXX_FLAGS}  -fPIE -pthread" )
else(NOT ${CMAKE_SYSTEM_NAME} MATCHES "QNX")
	SET( CMAKE_CXX_FLAGS  "-fpie" )
	SET( CMAKE_EXE_LINKER_FLAGS  "-fpie" )		
	SET( CMAKE_C_FLAGS  "-fpie" )
ENDIF()

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${ADDITIONAL_LIBRARY}")

set(CMAKE_DEBUG_POSTFIX "d" CACHE STRING "Set debug library postfix" FORCE)

if (MSVC)
    set(PROTO_BUF_INCLUDE_DIR "")
endif (MSVC)
						
INCLUDE_DIRECTORIES(
						${PROTOBUF_INCLUDE_DIR}
						${COMMUNICATOR_INCLUDE_DIR}
						${PLUGIN_INTERFACE_INCLUDE_DIR}
						${CONFIG_PROVIDER_INCLUDE_DIR}
						${PLUGIN_PROVIDER_INCLUDE_DIR}
						${MESSAGE_RECORDER_INCLUDE_DIR}
						${LOGGER_INCLUDE_DIR}
						${MEDIATOR_INCLUDE_DIR}
						)


IF(${TA_LOCAL_ENABLE_TESTING})
	IF (CMAKE_COMPILER_IS_GNUCC)
	  SET(CMAKE_C_FLAGS  "${CMAKE_C_FLAGS} -g -O0 -Wall -fprofile-arcs -ftest-coverage")
	  SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -g -O0 -Wall -fprofile-arcs -ftest-coverage")
	  SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fprofile-arcs -ftest-coverage -lgcov")
	ENDIF()
	INCLUDE_DIRECTORIES(${GTEST_INCLUDE_DIR} ${GMOCK_INCLUDE_DIR})
ENDIF()

SET (PLUGIN_INTERFACE_LIB_PATH ${CMAKE_INSTALL_PREFIX})
LINK_DIRECTORIES(${PLUGIN_INTERFACE_LIB_PATH} ${WCLIB})

ADD_SUBDIRECTORY(logger)
ADD_SUBDIRECTORY(message-recorder)
ADD_SUBDIRECTORY(communicator)
ADD_SUBDIRECTORY(config-provider)
ADD_SUBDIRECTORY(plugin-provider)

SET (RACE_TARGET_AGENT_SRC target_agent_main.cpp ${CMAKE_CURRENT_SOURCE_DIR}/target-agent-runtime/src/CMediator.cpp )
ADD_EXECUTABLE(solys-agent ${RACE_TARGET_AGENT_SRC})

TARGET_LINK_LIBRARIES(solys-agent
    communicator
    config-provider
    plugin-provider
    message-recorder
    logger
    ${PROTOBUF_LIBRARY}
    Poco::Foundation
    Poco::Util
    Poco::Net
    Poco::XML
    Poco::JSON
)

SET_TARGET_PROPERTIES(solys-agent PROPERTIES DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX})



SET_TARGET_PROPERTIES(solys-agent PROPERTIES INSTALL_RPATH "${ORIGIN}")


INSTALL(TARGETS solys-agent RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX} PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
                  
INSTALL(DIRECTORY  ${PROTO_INSTALL_PATH}lib/
DESTINATION ${CMAKE_INSTALL_PREFIX}
FILES_MATCHING PATTERN "*.so*"
)



